{"version":3,"sources":["components/styles/game.js","components/helpers/game.js","components/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["classes","root","flexGrow","height","display","justifyContent","alignItems","paper","width","margin","control","padding","score","paddingRight","slideUpDown","col","dir","arr","filter","val","difference","length","i","push","unshift","combineUpDown","console","log","rotate","matrix","N","result","map","row","j","checkGame","includes","alert","Game","state","data","addValue","options","newData","updateScore","x","y","randomNum","Math","floor","random","randomElement","setState","slideUpDownUpdate","newRow","forEach","element","slideLeftRightUpdate","finalData","rotatedData","Container","style","header","align","Row","Col","this","Paper","Button","onClick","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc7daaa6.chunk.js","sourcesContent":["export const classes = {\r\n  root: {\r\n    flexGrow: 1,\r\n    height: \"80vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    height: 100,\r\n    width: 100,\r\n    margin: 0.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  control: {\r\n    padding: 5\r\n  },\r\n  score: {\r\n    paddingRight: 400\r\n  }\r\n};\r\n","export const slideUpDown = (col, dir) => {\r\n  let arr = col.filter(val => val !== 0);\r\n  let difference = 4 - arr.length;\r\n  for (let i = 0; i < difference; i++) {\r\n    if (dir === \"up\") {\r\n      arr.push(0);\r\n    } else if (dir === \"down\") {\r\n      arr.unshift(0);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const combineUpDown = (col, dir) => {\r\n  if (dir === \"down\") {\r\n    for (let i = 3; i > 0; i--) {\r\n      if (col[i] === col[i - 1]) {\r\n        col[i] = col[i] + col[i - 1];\r\n        col[i - 1] = 0;\r\n        console.log(col);\r\n        break;\r\n      }\r\n    }\r\n  } else if (dir === \"up\") {\r\n    for (let i = 0; i < 3; i++) {\r\n      if (col[i] === col[i + 1]) {\r\n        col[i] = col[i] + col[i + 1];\r\n        col[i + 1] = 0;\r\n        console.log(col);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const rotate = matrix => {\r\n  const N = matrix.length - 1;\r\n  const result = matrix.map((row, i) => row.map((val, j) => matrix[N - j][i]));\r\n  matrix.length = 0;\r\n  matrix.push(...result);\r\n  return matrix;\r\n};\r\nexport const checkGame = matrix => {\r\n  for (let i = 0; i < 4; i++) {\r\n    if (matrix[i].includes(2048)) {\r\n      alert(\"You win\");\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { classes } from \"./styles/game\";\r\nimport { rotate, combineUpDown, slideUpDown, checkGame } from \"./helpers/game\";\r\nclass Game extends Component {\r\n  state = {\r\n    data: [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 2, 0],\r\n      [0, 0, 0, 0]\r\n    ],\r\n    score: 0\r\n  };\r\n  addValue = () => {\r\n    let options = [];\r\n    let newData = this.state.data;\r\n    this.updateScore();\r\n    for (let i = 0; i < 4; i++) {\r\n      for (let j = 0; j < 4; j++) {\r\n        if (this.state.data[i][j] === 0) {\r\n          options.push({ x: i, y: j });\r\n        }\r\n      }\r\n    }\r\n    if (options.length > 0) {\r\n      let randomNum = Math.floor(Math.random() * options.length);\r\n      let randomElement = options[randomNum];\r\n      newData[randomElement.x][randomElement.y] = randomNum > 2 ? 2 : 4;\r\n      this.setState({ data: newData });\r\n    } else if (options.length === 0) {\r\n      alert(\"No more moves\");\r\n    }\r\n    if (checkGame(this.state.data)) {\r\n      alert(\"You win\");\r\n    }\r\n    // console.log(options);\r\n    // console.log(this.state.data);\r\n  };\r\n\r\n  slideUpDownUpdate = (data, dir) => {\r\n    let oldData = data;\r\n    let newData = [];\r\n    let newRow = [];\r\n    oldData.forEach(element => {\r\n      newRow = slideUpDown(element, dir);\r\n      combineUpDown(newRow, dir);\r\n\r\n      newData.push(newRow);\r\n    });\r\n    console.log(newData);\r\n    this.setState({ data: newData }, () => {\r\n      this.addValue();\r\n    });\r\n  };\r\n\r\n  slideLeftRightUpdate = (data, dir) => {\r\n    let oldData = data;\r\n    let rotatedData = rotate(oldData);\r\n    let newData = [];\r\n    let newRow = [];\r\n    let finalData = [];\r\n\r\n    rotatedData.forEach(element => {\r\n      newRow = slideUpDown(element, dir);\r\n      combineUpDown(newRow, dir);\r\n\r\n      newData.push(newRow);\r\n    });\r\n    console.log(newData);\r\n    finalData = rotate(newData);\r\n    finalData = rotate(newData);\r\n    finalData = rotate(newData);\r\n\r\n    this.setState({ data: finalData }, () => {\r\n      console.log(finalData);\r\n      this.addValue();\r\n    });\r\n  };\r\n\r\n  updateScore = () => {\r\n    let score = 0;\r\n    let data = this.state.data;\r\n    for (let i = 0; i < 4; i++) {\r\n      for (let j = 0; j < 4; j++) {\r\n        score = score + data[i][j];\r\n      }\r\n    }\r\n    this.setState({ score });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <p style={classes.header} align=\"center\">\r\n          2048 Game Smbat Gardilyan\r\n        </p>\r\n        <Row>\r\n          <Col>\r\n            <p align=\"right\" style={classes.score}>\r\n              Score: {this.state.score}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Container style={classes.root}>\r\n          {this.state.data.map(col => (\r\n            <Row>\r\n              {col.map(row => (\r\n                <Col>\r\n                  <Paper style={classes.paper}>\r\n                    <h1>{row}</h1>\r\n                  </Paper>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          ))}\r\n          <Button\r\n            onClick={() => this.slideLeftRightUpdate(this.state.data, \"down\")}\r\n          >\r\n            Left\r\n          </Button>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                onClick={() => this.slideUpDownUpdate(this.state.data, \"up\")}\r\n              >\r\n                Up\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                onClick={() => this.slideUpDownUpdate(this.state.data, \"down\")}\r\n              >\r\n                Down\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n            onClick={() => this.slideLeftRightUpdate(this.state.data, \"up\")}\r\n          >\r\n            Right\r\n          </Button>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Game from \"./components/Game\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { classes } from \"./components/styles/game\";\r\n\r\nfunction App() {\r\n  return <Game></Game>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}